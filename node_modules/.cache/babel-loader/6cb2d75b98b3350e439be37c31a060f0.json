{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React from \"react\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport { any, arrayOf, func, node, object, oneOfType, shape, string } from \"prop-types\";\nimport Container, { PropTypes as ContainerPropTypes } from \"./container\";\nimport Alert, { PropTypes as AlertPropTypes } from \"./alert-timer\";\nimport AlertTransition from \"./alert-transition\";\nimport styles from \"./container/styles\";\n\nvar AlertList = function AlertList(_ref) {\n  var position = _ref.position,\n      alerts = _ref.alerts,\n      onDismiss = _ref.onDismiss,\n      classes = _ref.classes,\n      props = _objectWithoutProperties(_ref, [\"position\", \"alerts\", \"onDismiss\", \"classes\"]);\n\n  return React.createElement(Container, {\n    position: position,\n    className: classes.container\n  }, React.createElement(TransitionGroup, null, alerts.map(function (item) {\n    var dismiss = onDismiss ? function () {\n      return onDismiss(item);\n    } : null;\n\n    var message = item.message,\n        alertProps = _objectWithoutProperties(item, [\"message\"]);\n\n    return React.createElement(AlertTransition, {\n      key: item.id\n    }, React.createElement(Alert, _extends({}, props, alertProps, {\n      onDismiss: dismiss\n    }), message));\n  })));\n};\n\nvar timeout = AlertPropTypes.timeout,\n    type = AlertPropTypes.type,\n    headline = AlertPropTypes.headline;\nAlertList.propTypes = _extends({}, ContainerPropTypes, {\n  alerts: arrayOf(shape({\n    id: any.isRequired,\n    type: type,\n    headline: headline,\n    message: oneOfType([string, node, object]).isRequired\n  })).isRequired,\n  onDismiss: func,\n  timeout: timeout\n});\nexport default styles(AlertList);","map":null,"metadata":{},"sourceType":"module"}