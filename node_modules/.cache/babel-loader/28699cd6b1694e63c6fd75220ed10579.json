{"ast":null,"code":"var _jsxFileName = \"/home/dev/ictu/Machinelearning/src/Auth.js\";\nimport React from 'react';\nimport { base } from './Firebaseconntion';\nexport const AuthContext = React.createContext();\nexport default class AuthProvider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null\n    };\n  }\n\n  componentWillMount() {\n    base.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          currentUser: user\n        });\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(AuthContext.Provider, {\n      value: this.state.currentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}","map":{"version":3,"sources":["/home/dev/ictu/Machinelearning/src/Auth.js"],"names":["React","base","AuthContext","createContext","AuthProvider","Component","constructor","props","state","currentUser","componentWillMount","auth","onAuthStateChanged","user","setState","render","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,oBAAnB;AAEA,OAAO,MAAMC,WAAW,GAAGF,KAAK,CAACG,aAAN,EAApB;AAGP,eAAe,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA0C;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,WAAW,EAAG;AADP,KAAX;AAGH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjBT,IAAAA,IAAI,CAACU,IAAL,GAAYC,kBAAZ,CAA+BC,IAAI,IAAE;AACjC,UAAGA,IAAH,EAAQ;AACJ,aAAKC,QAAL,CAAc;AAACL,UAAAA,WAAW,EAAGI;AAAf,SAAd;AACH;AACJ,KAJD;AAKH;;AAEDE,EAAAA,MAAM,GAAE;AACJ,WACI,oBAAC,WAAD,CAAa,QAAb;AACA,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,WADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKF,KAAL,CAAWS,QAFhB,CADJ;AAMH;;AAvBoD","sourcesContent":["import React from 'react'\nimport {base} from './Firebaseconntion'\n\nexport const AuthContext = React.createContext();\n\n\nexport default class AuthProvider extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            currentUser : null,\n        }\n    }\n\n    componentWillMount() {\n        base.auth().onAuthStateChanged(user=>{\n            if(user){\n                this.setState({currentUser : user})\n            }\n        })\n    }\n\n    render(){\n        return(\n            <AuthContext.Provider\n            value={this.state.currentUser}>\n                {this.props.children}\n            </AuthContext.Provider>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}