{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React from \"react\";\nimport transitionStyles from \"./transition-styles\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { ENTER_TIMEOUT, EXIT_TIMEOUT } from \"./container\";\nimport useSheet from \"react-jss\";\n\nvar AlertTransition = function AlertTransition(_ref) {\n  var classes = _ref.classes,\n      props = _objectWithoutProperties(_ref, [\"classes\"]);\n\n  delete props.classes; // if it is there (it may not be depending on which version of JSS is used)\n\n  var timeout = {\n    enter: ENTER_TIMEOUT,\n    exit: EXIT_TIMEOUT\n  };\n  return React.createElement(CSSTransition, _extends({\n    timeout: timeout,\n    classNames: classes\n  }, props));\n};\n\nexport default useSheet(transitionStyles)(AlertTransition);","map":null,"metadata":{},"sourceType":"module"}